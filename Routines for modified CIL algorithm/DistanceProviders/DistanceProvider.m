% This abstract class contains the definitions for properties and methods
% used by all distance providers inside this library. All abstract methods,
% which are defined here, must be implemented in the derived classes.

classdef (Abstract) DistanceProvider < handle

    properties
        % all intermediate settings of the distance provider must be stored 
        % in this field
        Settings = struct();
        % each distance provider must possess the unique abbreviation, 
        % which is used during serialization. This value must be adjusted 
        % by the derived classes
        Abbreviation = 'DistanceProvider';
    end
    
    methods (Abstract)
        % This method computes the distance matrix between two specified
        % sets of pattern data, which were generated by the specifise model
        %   INPUT
        %   S1 : the first set of pattern data (2D array)
        %   S2 : the second set of pattern data (2D array)
        %   model : an instance of model class, which has produced the
        %   pattern data
        %   OUTPUT
        %   d : distance matrix (2D array)
        d = distance(S1,S2,model);
        
        % This method serializes the object and saves the result into the
        % output structure
        %   OUTPUT
        %   data : structure, which contains the serialized object
        data = serialize(obj);
    end
    
    methods (Static)
        % This method de-serializes the object of the same class
        %   INPUT
        %   data : structure, which contains the serialized object
        %   OUTPUT
        %   obj : an instance of the respective class 
        function obj = load(data)
            error('It is impossible to load an abstract class! Use DistanceProvider.restore() instead.');
        end
        
        % This method de-serializes the object by recognising the
        % abbreviation and calling the respective method of the derived
        % class
        %   INPUT
        %   data : structure, which contains the serialized object
        %   OUTPUT
        %   obj : an instance of the respective class
        function obj = restore(data)
            if strcmp(data.Abbreviation,'Lp')
                obj = LpDistance.load(data);
            elseif strcmp(data.Abbreviation,'W1p')
                obj = W1pDistance.load(data);
            elseif strcmp(data.Abbreviation,'W1pPrime')
                obj = W1pPrimeDistance.load(data);
            elseif strcmp(data.Abbreviation,'MDP')
                obj = MultiDistanceProvider.load(data);
            elseif strcmp(data.Abbreviation,'HMT')
                obj = HMTMultiDistanceProvider.load(data);
            else
                error('DistanceProvider class was not recognised!');
            end
        end
    end
end

